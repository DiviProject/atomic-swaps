// Code generated by protoc-gen-go. DO NOT EDIT.
// source: refund.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RefundRequest struct {
	ContractBytes        string   `protobuf:"bytes,1,opt,name=contractBytes,proto3" json:"contractBytes,omitempty"`
	TransactionBytes     string   `protobuf:"bytes,2,opt,name=transactionBytes,proto3" json:"transactionBytes,omitempty"`
	Currency             string   `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefundRequest) Reset()         { *m = RefundRequest{} }
func (m *RefundRequest) String() string { return proto.CompactTextString(m) }
func (*RefundRequest) ProtoMessage()    {}
func (*RefundRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_27efa219a51643e4, []int{0}
}

func (m *RefundRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefundRequest.Unmarshal(m, b)
}
func (m *RefundRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefundRequest.Marshal(b, m, deterministic)
}
func (m *RefundRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefundRequest.Merge(m, src)
}
func (m *RefundRequest) XXX_Size() int {
	return xxx_messageInfo_RefundRequest.Size(m)
}
func (m *RefundRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RefundRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RefundRequest proto.InternalMessageInfo

func (m *RefundRequest) GetContractBytes() string {
	if m != nil {
		return m.ContractBytes
	}
	return ""
}

func (m *RefundRequest) GetTransactionBytes() string {
	if m != nil {
		return m.TransactionBytes
	}
	return ""
}

func (m *RefundRequest) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

type RefundResponse struct {
	RefundFee            string   `protobuf:"bytes,1,opt,name=refundFee,proto3" json:"refundFee,omitempty"`
	RefundTransaction    string   `protobuf:"bytes,2,opt,name=refundTransaction,proto3" json:"refundTransaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefundResponse) Reset()         { *m = RefundResponse{} }
func (m *RefundResponse) String() string { return proto.CompactTextString(m) }
func (*RefundResponse) ProtoMessage()    {}
func (*RefundResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_27efa219a51643e4, []int{1}
}

func (m *RefundResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefundResponse.Unmarshal(m, b)
}
func (m *RefundResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefundResponse.Marshal(b, m, deterministic)
}
func (m *RefundResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefundResponse.Merge(m, src)
}
func (m *RefundResponse) XXX_Size() int {
	return xxx_messageInfo_RefundResponse.Size(m)
}
func (m *RefundResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RefundResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RefundResponse proto.InternalMessageInfo

func (m *RefundResponse) GetRefundFee() string {
	if m != nil {
		return m.RefundFee
	}
	return ""
}

func (m *RefundResponse) GetRefundTransaction() string {
	if m != nil {
		return m.RefundTransaction
	}
	return ""
}

func init() {
	proto.RegisterType((*RefundRequest)(nil), "api.RefundRequest")
	proto.RegisterType((*RefundResponse)(nil), "api.RefundResponse")
}

func init() { proto.RegisterFile("refund.proto", fileDescriptor_27efa219a51643e4) }

var fileDescriptor_27efa219a51643e4 = []byte{
	// 238 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4a, 0x4d, 0x2b,
	0xcd, 0x4b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x94, 0x92, 0x49,
	0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x4f, 0x2c, 0xc8, 0xd4, 0x4f, 0xcc, 0xcb, 0xcb, 0x2f, 0x49,
	0x2c, 0xc9, 0xcc, 0xcf, 0x2b, 0x86, 0x28, 0x51, 0xaa, 0xe5, 0xe2, 0x0d, 0x02, 0x6b, 0x09, 0x4a,
	0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x52, 0xe1, 0xe2, 0x4d, 0xce, 0xcf, 0x2b, 0x29, 0x4a, 0x4c,
	0x2e, 0x71, 0xaa, 0x2c, 0x49, 0x2d, 0x96, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x42, 0x15, 0x14,
	0xd2, 0xe2, 0x12, 0x28, 0x29, 0x4a, 0xcc, 0x2b, 0x4e, 0x4c, 0x06, 0x19, 0x06, 0x51, 0xc8, 0x04,
	0x56, 0x88, 0x21, 0x2e, 0x24, 0xc5, 0xc5, 0x91, 0x5c, 0x5a, 0x54, 0x94, 0x9a, 0x97, 0x5c, 0x29,
	0xc1, 0x0c, 0x56, 0x03, 0xe7, 0x2b, 0xc5, 0x70, 0xf1, 0xc1, 0xac, 0x2f, 0x2e, 0xc8, 0xcf, 0x2b,
	0x4e, 0x15, 0x92, 0xe1, 0xe2, 0x84, 0xf8, 0xc1, 0x2d, 0x35, 0x15, 0x6a, 0x37, 0x42, 0x40, 0x48,
	0x87, 0x4b, 0x10, 0xc2, 0x09, 0x41, 0xd8, 0x02, 0xb5, 0x18, 0x53, 0xc2, 0x28, 0x88, 0x8b, 0x0d,
	0x62, 0xba, 0x90, 0x07, 0x17, 0x1b, 0x44, 0x5a, 0x48, 0x48, 0x2f, 0xb1, 0x20, 0x53, 0x0f, 0xc5,
	0xcf, 0x52, 0xc2, 0x28, 0x62, 0x10, 0x87, 0x28, 0x89, 0x36, 0x5d, 0x7e, 0x32, 0x99, 0x89, 0x5f,
	0x89, 0x4b, 0xbf, 0xcc, 0x50, 0x1f, 0xa2, 0xd9, 0x8a, 0x51, 0x2b, 0x89, 0x0d, 0x1c, 0x6e, 0xc6,
	0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1e, 0xa8, 0x1f, 0x1f, 0x6a, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RefundClient is the client API for Refund service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RefundClient interface {
	Refund(ctx context.Context, in *RefundRequest, opts ...grpc.CallOption) (*RefundResponse, error)
}

type refundClient struct {
	cc *grpc.ClientConn
}

func NewRefundClient(cc *grpc.ClientConn) RefundClient {
	return &refundClient{cc}
}

func (c *refundClient) Refund(ctx context.Context, in *RefundRequest, opts ...grpc.CallOption) (*RefundResponse, error) {
	out := new(RefundResponse)
	err := c.cc.Invoke(ctx, "/api.Refund/refund", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RefundServer is the server API for Refund service.
type RefundServer interface {
	Refund(context.Context, *RefundRequest) (*RefundResponse, error)
}

// UnimplementedRefundServer can be embedded to have forward compatible implementations.
type UnimplementedRefundServer struct {
}

func (*UnimplementedRefundServer) Refund(ctx context.Context, req *RefundRequest) (*RefundResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Refund not implemented")
}

func RegisterRefundServer(s *grpc.Server, srv RefundServer) {
	s.RegisterService(&_Refund_serviceDesc, srv)
}

func _Refund_Refund_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefundRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RefundServer).Refund(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Refund/Refund",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RefundServer).Refund(ctx, req.(*RefundRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Refund_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Refund",
	HandlerType: (*RefundServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "refund",
			Handler:    _Refund_Refund_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "refund.proto",
}
